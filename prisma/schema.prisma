// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex", "interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String     @db.VarChar(255)
  name        String?    @db.VarChar(255)
  phone       String?
  created     DateTime?  @default(now())
  isActive    Boolean    @default(true)
  lastActive  DateTime   @updatedAt
  prefs       UserPrefs? @relation(fields: [userPrefsId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  cart        Cart[]
  wishlist    Wishlist?  @relation(fields: [wishlistId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userGroup   UserGroup  @relation(fields: [userGroupId], references: [id])
  userGroupId Int        @default(1)
  order       Order[]
  userPrefsId Int?
  wishlistId  Int?
}

model UserGroup {
  id       Int      @id @default(autoincrement())
  title    String   @unique
  discount Decimal? @db.Decimal(8, 2)
  user     User[]
}

model UserPrefs {
  id    Int    @id @default(autoincrement())
  prefs Json?
  user  User[]
}

model Cart {
  id      Int           @id @default(autoincrement())
  details CartDetails[]
  user    User?         @relation(fields: [userId], references: [id])
  userId  Int?
  created DateTime?     @default(now())
  updated DateTime?     @updatedAt
  order   Order?        @relation(fields: [orderId], references: [id])
  orderId Int?          @unique
}

model CartDetails {
  id       Int       @id @default(autoincrement())
  product  Product[]
  quantity Int       @default(1)
  cart     Cart      @relation(fields: [cartId], references: [id])
  cartId   Int       @unique
}

model Wishlist {
  id      Int       @id @default(autoincrement())
  product Product[]
  user    User[]
}

model Product {
  id             Int             @id @default(autoincrement())
  sku            String          @db.VarChar(32)
  code           String          @unique @db.VarChar(32)
  barcode        String?         @unique @db.VarChar(64)
  caratage       String?         @db.VarChar(16)
  weight         Decimal?        @db.Decimal(6, 3)
  price          Decimal?        @db.Decimal(8, 2)
  priceBefore    Decimal?        @db.Decimal(8, 2)
  cost           Decimal?        @db.Decimal(8, 2)
  discount       Decimal?        @db.Decimal(8, 2)
  margin         Decimal?        @db.Decimal(8, 2)
  created        DateTime?       @default(now())
  updated        DateTime?       @updatedAt
  isActive       Boolean         @default(true)
  title          String?         @db.VarChar(128)
  description    String?         @db.VarChar(1024)
  text           String?         @db.Text
  seoH1          String?         @db.VarChar(128)
  seoTitle       String?         @db.VarChar(255)
  seoDescription String?         @db.VarChar(1024)
  brand          Brand           @relation(fields: [brandId], references: [id])
  brandId        Int             @default(1)
  category       Category        @relation(fields: [categoryId], references: [id])
  categoryId     Int             @default(1)
  supplier       Supplier        @relation(fields: [supplierId], references: [id])
  supplierId     Int             @default(1)
  image          Image[]
  wishlist       Wishlist[]
  cartDetails    CartDetails[]
  orderProducts  OrderProducts[]

  @@fulltext([sku])
  @@fulltext([code])
  @@fulltext([title])
  @@fulltext([sku, code, title])
  @@fulltext([description])
}

model Image {
  id        Int      @id @default(autoincrement())
  title     String?  @db.VarChar(255)
  alt       String?  @db.VarChar(255)
  order     Int      @default(0)
  path      String?  @db.VarChar(512)
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Category {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  isActive       Boolean   @default(true)
  title          String?   @unique @db.VarChar(128)
  description    String?   @db.VarChar(1024)
  text           String?   @db.Text
  seoH1          String?   @db.VarChar(128)
  seoTitle       String?   @db.VarChar(255)
  seoDescription String?   @db.VarChar(1024)
  thumbnail      String?
  parentCategory Int       @default(1)
  product        Product[]
}

model Brand {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  isActive       Boolean   @default(true)
  title          String?   @unique @db.VarChar(128)
  description    String?   @db.VarChar(1024)
  text           String?   @db.Text
  seoH1          String?   @db.VarChar(128)
  seoTitle       String?   @db.VarChar(255)
  seoDescription String?   @db.VarChar(1024)
  thumbnail      String?
  logo           String?
  product        Product[]
}

model Supplier {
  id          Int       @id @default(autoincrement())
  created     DateTime? @default(now())
  updated     DateTime? @updatedAt
  isActive    Boolean   @default(true)
  title       String?   @db.VarChar(128)
  description String?   @db.VarChar(1024)
  text        String?   @db.Text
  thumbnail   String?
  logo        String?
  product     Product[]
}

model Order {
  id            Int             @id @default(autoincrement())
  created       DateTime?       @default(now())
  updated       DateTime?       @updatedAt
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  code          String          @unique @db.VarChar(32)
  weight        Decimal         @db.Decimal(8, 2)
  total         Decimal         @db.Decimal(8, 2)
  discount      Decimal         @db.Decimal(8, 2)
  deliveryPrice Decimal         @db.Decimal(8, 2)
  status        OrderStatus     @relation(fields: [statusId], references: [id])
  statusId      Int             @default(1)
  details       OrderDetails    @relation(fields: [detailsId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  products      OrderProducts[]
  detailsId     Int             @unique
  cart          Cart?
}

model OrderStatus {
  id       Int     @id @default(autoincrement())
  title    String
  isActive Boolean @default(true)
  order    Order[]
}

model OrderDetails {
  id             Int       @id @default(autoincrement())
  created        DateTime? @default(now())
  updated        DateTime? @updatedAt
  clientComment  String?   @db.VarChar(1024)
  managerComment String?   @db.VarChar(1024)
  city           String?
  adress         String?
  phone          String?
  recipient      String?
  promocode      String?
  order          Order[]
}

model OrderProducts {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  orderId   Int
}

model Settings {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(32)
  value Json
}

model Localisation {
  id  Int     @id @default(autoincrement())
  key String? @db.VarChar(64)
  en  String? @db.Text
  he  String? @db.Text
  ru  String? @db.Text
}
